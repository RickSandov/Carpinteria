@mixin respond($breakpoint) {
    @if $breakpoint==phone {
        @media (max-width: 37.5em) {
            @content
        }

        ; // 600px
    }

    @if $breakpoint==tab-port {
        @media (max-width: 56.25em) {
            @content
        }

        ; // 900px
    }

    @if $breakpoint==from-tab-land {
        @media (min-width: 56.25em) {
            @content
        }

        ; // 900px
    }

    @if $breakpoint==google {
        @media (max-width: 71.37em) {
            @content
        }

        ; // 900px
    }

    @if $breakpoint==tab-land {
        @media (max-width: 75em) {
            @content
        }

        ; //1200px
    }

    @if $breakpoint==big-desk {
        @media (min-width: 112.5em) {
            @content
        }

        ; //1800px
    }
}

@mixin animation($duration, $name, $delay) {
    &.aos-animate {
        opacity: 1;
        animation: $name $duration ease-in-out $delay;
        backface-visibility: hidden;
        animation-fill-mode: backwards;
    }
}

@mixin shadow {
    box-shadow: 3px 3px 5px $color-shadow;
}

@mixin shadow-nav {
    box-shadow: 2px 2px 5px $color-shadow;
}

@mixin navigation {
    padding: 3rem 0;
    margin: 0 auto;
    width: 100%;
    // max-width: 90%;
    display: flex;
    justify-content: space-between;
    // margin-top: 2rem;
    transition: .2s all ease-in-out;

    @include respond(tab-port) {
        width: 90%;
    }

    li {
        

        a {


            &:link,
            &:visited {
                text-decoration: none;
                text-transform: capitalize;

                padding: .5rem 2rem;
                margin: 0 2rem;

                color: $color-text;
                font-size: 2rem;
                transition: all .5s;
                // padding: .5rem 3rem;
                // margin: 0 2rem;

                @include respond(phone) {
                    font-size: 3rem;
                }

                @include respond(tab-port) {
                    color: white !important;
                }

            }

            &:hover {
                @include respond(from-tab-land) {
                    @include shadow;
                }

                background-color: $color-primary;
                border-radius: 5rem;
                color: white;

                &::after {
                    opacity: 0;
                }
            }

        }

        @include respond(tab-port) {

            & .active,
            &:hover {
                background-color: $color-primary !important;
                @include shadow;
            }
        }
    }

}